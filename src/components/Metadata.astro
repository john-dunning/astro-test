---
import { metaTag, ogMetaTag } from "@/utils/meta";

export type MetadataProp = Record<string, string | number>;

interface Props {
	meta: MetadataProp;
}

const { meta: {
	title,
	url,
	image,
	...meta }
} = Astro.props;

const tags = Object.entries(meta)
	.map(([key, value]) => metaTag(key, value))
	.join("\n\t\t");
const ogTags = Object.entries({
	title,
	url,
	// make sure the image metadata is an absolute URL, not just a relative path,
	// and only include the key if it's truthy, so we don't include an `undefined`
	// og:image tag
	image: image && new URL(image as string, import.meta.env.SITE),
	...meta
})
	.map(([key, value]) => value ? ogMetaTag(key, value) : null)
	.filter(Boolean)
	.join("\n\t\t");
---

<link rel="canonical" href={String(url)} />
		<Fragment set:html={tags} />
		<Fragment set:html={ogTags} />
