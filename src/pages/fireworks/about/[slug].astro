---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import FireworksCommandLayout from "@/layouts/FireworksCommandLayout.astro";
import FireworksArticle from "@/components/FireworksArticle.astro";
import FireworksLinksBar from "@/components/FireworksLinksBar.astro";
import PackageContents from "@/components/PackageContents.astro";
import { getIncImage } from "@/utils/getIncImage";
import { getMxpLinks } from "@/utils/getMxpLinks.ts";
import type { MetadataProp } from "@/components/Metadata.astro";

export async function getStaticPaths()
{
	const commands = await getCollection("commands");

	return commands.map((entry) => ({
		params: {
			slug: entry.slug
		},
		props: {
			entry
		},
	}));
}

const {
	entry: {
		render,
		slug,
		data: { name, files, fileVersion, version, date, summary }
	}
} = Astro.props;
const { Content } = await render();
const imageData = !!slug && await getIncImage(`${slug}.png`);
const mxpLinks = await getMxpLinks();
const downloadLink = mxpLinks.get(fileVersion);
const meta: MetadataProp = {
	description: summary
};

if (imageData) {
	meta.image = String(new URL(imageData.src, Astro.site ?? Astro.url))
	meta["image:width"] = imageData.width;
	meta["image:height"] = imageData.height;
}
---

<FireworksCommandLayout
	title={name}
	disqusID={`fireworks/about/${slug}`}
	meta={meta}
>
	<FireworksArticle title={name}>
		<FireworksLinksBar
			downloadHref={downloadLink}
			version={version}
			date={date}
		/>

		{imageData &&
			<Image class="hero-image" src={imageData} alt="Screenshot" />
		}

		<Content />
	</FireworksArticle>

	<PackageContents files={files} />
</FireworksCommandLayout>
